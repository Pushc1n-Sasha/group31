{
	"info": {
		"_postman_id": "c51285a9-6d94-4713-a31b-391c2f138ff6",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23581519"
	},
	"item": [
		{
			"name": "1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var mama = pm.response.json();\r",
							"let req = request.data\r",
							"let req_salary = +req.salary\r",
							"\r",
							"let resp_salary_1_5 = req_salary * 4\r",
							"\r",
							"console.log(\"req_salary = \" + typeof req.salary)\r",
							"console.log(\"resp_salary = \" + typeof mama.salary)\r",
							"\r",
							"pm.test(\"salary\", function () {\r",
							"    pm.expect(mama.salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"    pm.expect(mama.family.u_salary_1_5_year).to.eql(resp_salary_1_5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Pushc1n",
							"type": "text"
						},
						{
							"key": "age",
							"value": "31",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "100",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let resp = pm.response.json();\r",
							"let req = request.data;\r",
							"\r",
							"pm.test(\"Name resp = name req\",function(){\r",
							"    pm.expect(resp.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age resp =  age req\",function(){\r",
							"    pm.expect(resp.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"salary resp = salary resp\",function(){\r",
							"    pm.expect(resp.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"console.log(resp.family);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"dog_name\",function(){\r",
							"    \r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"\r",
							"console.log(\"dog_name\",jsonData.family.pets.dog.name);\r",
							"});\r",
							"\r",
							"pm.test(\"dog_have_age\",function(){\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"\r",
							"console.log(\"dog_age\",jsonData.family.pets.dog.age);\r",
							"});\r",
							"\r",
							"pm.test(\"dog_name_Luky\",function(){\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"dog_age_4\",function(){\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Pushc1n",
							"type": "text"
						},
						{
							"key": "age",
							"value": "31",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "100",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/object_info_3?name=Pushc1n&age=31&salary=100",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Pushc1n"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "salary",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json();\r",
							"let req = request.data;\r",
							"\r",
							"pm.test(\"name resp = name req\",function(){\r",
							"    pm.expect(resp.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age resp =  age req\",function(){\r",
							"    pm.expect(resp.age).to.eql(+req.age);\r",
							"});\r",
							"\r",
							"console.log(req.salary);\r",
							"console.log(resp.salary);\r",
							"console.log(resp.salary[0]);\r",
							"console.log(resp.salary[1]);\r",
							"console.log(resp.salary[2]);\r",
							"\r",
							"pm.test(\"salary req= salary [0] resp\",function(){\r",
							"    pm.expect(resp.salary[0]).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"\r",
							"let otvet_vtoroj = + resp.salary[1];\r",
							"pm.test(\"salary req*2= salary [1] resp\",function(){\r",
							"    pm.expect(otvet_vtoroj).to.eql(+req.salary*2);\r",
							"});\r",
							"\r",
							"let otvet_treetij = + resp.salary[2];\r",
							"pm.test(\"salary req*3= salary [2] resp\",function(){\r",
							"    pm.expect(otvet_treetij).to.eql(+req.salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", req.name);\r",
							"pm.environment.set(\"age\", req.age);\r",
							"pm.environment.set(\"salary\", req.salary);\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"\r",
							"});\r",
							"\r",
							"for (let i=0; i < resp.salary.length; i++){\r",
							"    console.log(i, resp.salary[i])\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let req = pm.request.url.query.toObject();\r",
							"let resp = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"json response have start_qa_salary\",function(){\r",
							"    pm.expect(resp).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"json response have qa_salary_after_6_months\",function(){\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"json response have qa_salary_after_12_months\",function(){\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"json response have qa_salary_after_1.5_year\",function(){\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"json response have qa_salary_after_3.5_years\",function(){\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"json response have person\",function(){\r",
							"    pm.expect(resp).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"start_qa_salary = salary\",function(){\r",
							"    pm.expect(resp.start_qa_salary).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months = salary*2\",function(){\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(+req.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months = salary*2.7\",function(){\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(+req.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year = salary*3.3\",function(){\r",
							"    pm.expect(resp[\"qa_salary_after_1.5_year\"]).to.eql(+req.salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years = salary*3.8\",function(){\r",
							"    pm.expect(resp[\"qa_salary_after_3.5_years\"]).to.eql(+req.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"u_name[1] = req.salary\",function(){\r",
							"    pm.expect(resp.person.u_name[1]).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"u_age = req.age\",function(){\r",
							"    pm.expect(resp.person.u_age).to.eql(+req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_5_years = salary*4.2\",function(){\r",
							"    pm.expect(resp.person.u_salary_5_years).to.eql(req.salary*4.2);\r",
							"});\r",
							"\r",
							"console.log(resp.person[1])\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age ",
							"value": "{{age}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{url}}/object_info_2?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var mama = pm.response.json();\r",
							"var resp_token = mama.token\r",
							"\r",
							"pm.environment.set(\"token\", resp_token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "Login ",
							"value": "Altair",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123456",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "login",
							"value": "Altair",
							"disabled": true
						},
						{
							"key": "password",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Pushc1n\",\r\n    \"age\": 31,\r\n    \"salary\": 1000,\r\n    \"auth_token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		}
	]
}